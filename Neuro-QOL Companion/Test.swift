//
//  Test.swift
//  Neuro-QOL Companion
//
//  Created by Work on 1/17/17.
//  Copyright © 2017 MJDoiron. All rights reserved.
//

import Foundation

class Test {
    var title:String!
    var isChosenForAdmin = false
    var hasAllQuestionsAnswered = false
    var questions:[Question] = []
    var scoreDict:[Int:(tScore: Float, standardError: Float)] = [:]
    var instructions = " "
    var secondInstructions:String?
    var rawScore:Int?
    var tScore:Float? {
        get {
            if let score = rawScore {
                return scoreDict[score]!.tScore
            } else {
                return nil
            }
        }
    }
    
    var standardError:Float? {
        get {
            if let score = rawScore {
                return scoreDict[score]!.standardError
            } else {
                return nil
            }
        }
    }
    
    func checkForCompletion(){
        let numberOfQuestions = questions.count
        var numberOfQuestionsCompleted = 0
        var totalRawScore = 0
        for question in questions {
            if let questionRawScore = question.rawScore {
                totalRawScore += questionRawScore
                numberOfQuestionsCompleted += 1
            }
        }
        if numberOfQuestionsCompleted == numberOfQuestions {
            hasAllQuestionsAnswered = true
            rawScore = totalRawScore
            
        }
    }
    
    init(shortForm: ShortForm) {
        switch shortForm {
        case .Anxiety:
            self.title = "Anxiety - SF"
            self.questions.append(Question(text: "I felt uneasy.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt nervous.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "Many situations made me worry.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "My worries overwhelmed me.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt tense. ", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I had difficulty calming down.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I had sudden feelings of panic.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt nervous when my normal routine was disturbed.", questionOptions: .NeverAlways))
            self.instructions = "In the past 7 days…"
            self.scoreDict[8] = (tScore: 36.4, standardError: 5.2)
            self.scoreDict[9] = (tScore: 42.1, standardError: 2.9)
            self.scoreDict[10] = (tScore: 44.3, standardError: 2.4)
            self.scoreDict[11] = (tScore: 45.9, standardError: 2.1)
            self.scoreDict[12] = (tScore: 47.3, standardError: 2)
            self.scoreDict[13] = (tScore: 48.4, standardError: 1.9)
            self.scoreDict[14] = (tScore: 49.5, standardError: 1.9)
            self.scoreDict[15] = (tScore: 50.5, standardError: 1.8)
            self.scoreDict[16] = (tScore: 51.4, standardError: 1.8)
            self.scoreDict[17] = (tScore: 52.3, standardError: 1.8)
            self.scoreDict[18] = (tScore: 53.3, standardError: 1.8)
            self.scoreDict[19] = (tScore: 54.2, standardError: 1.8)
            self.scoreDict[20] = (tScore: 55, standardError: 1.8)
            self.scoreDict[21] = (tScore: 55.9, standardError: 1.8)
            self.scoreDict[22] = (tScore: 56.8, standardError: 1.8)
            self.scoreDict[23] = (tScore: 57.6, standardError: 1.8)
            self.scoreDict[24] = (tScore: 58.4, standardError: 1.8)
            self.scoreDict[25] = (tScore: 59.3, standardError: 1.8)
            self.scoreDict[26] = (tScore: 60.1, standardError: 1.8)
            self.scoreDict[27] = (tScore: 60.9, standardError: 1.8)
            self.scoreDict[28] = (tScore: 61.8, standardError: 1.8)
            self.scoreDict[29] = (tScore: 62.6, standardError: 1.7)
            self.scoreDict[30] = (tScore: 63.4, standardError: 1.7)
            self.scoreDict[31] = (tScore: 64.2, standardError: 1.7)
            self.scoreDict[32] = (tScore: 65.1, standardError: 1.8)
            self.scoreDict[33] = (tScore: 65.9, standardError: 1.8)
            self.scoreDict[34] = (tScore: 66.8, standardError: 1.8)
            self.scoreDict[35] = (tScore: 67.8, standardError: 1.9)
            self.scoreDict[36] = (tScore: 68.9, standardError: 2)
            self.scoreDict[37] = (tScore: 70, standardError: 2.1)
            self.scoreDict[38] = (tScore: 71.5, standardError: 2.3)
            self.scoreDict[39] = (tScore: 73.3, standardError: 2.7)
            self.scoreDict[40] = (tScore: 76.8, standardError: 3.8)
        
        case .Depression:
            self.title = "Anxiety - SF"
            self.instructions = "In the past 7 days…"
            self.questions.append(Question(text: "I felt depressed.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt hopeless.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt that nothing could cheer me up.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt that my life was empty.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt worthless.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt unhappy.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt I had no reason for living.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt that nothing was interesting.", questionOptions: .NeverAlways))
            self.scoreDict[8] = (tScore: 36.9, standardError: 5.2)
            self.scoreDict[9] = (tScore: 43.1, standardError: 2.6)
            self.scoreDict[10] = (tScore: 45.3, standardError: 2.1)
            self.scoreDict[11] = (tScore: 46.8, standardError: 1.8)
            self.scoreDict[12] = (tScore: 47.9, standardError: 1.7)
            self.scoreDict[13] = (tScore: 48.9, standardError: 1.6)
            self.scoreDict[14] = (tScore: 49.8, standardError: 1.5)
            self.scoreDict[15] = (tScore: 50.6, standardError: 1.5)
            self.scoreDict[16] = (tScore: 51.3, standardError: 1.5)
            self.scoreDict[17] = (tScore: 52.1, standardError: 1.5)
            self.scoreDict[18] = (tScore: 52.8, standardError: 1.5)
            self.scoreDict[19] = (tScore: 53.6, standardError: 1.5)
            self.scoreDict[20] = (tScore: 54.3, standardError: 1.5)
            self.scoreDict[21] = (tScore: 55.1, standardError: 1.5)
            self.scoreDict[22] = (tScore: 55.9, standardError: 1.5)
            self.scoreDict[23] = (tScore: 56.7, standardError: 1.5)
            self.scoreDict[24] = (tScore: 57.4, standardError: 1.5)
            self.scoreDict[25] = (tScore: 58.2, standardError: 1.5)
            self.scoreDict[26] = (tScore: 59, standardError: 1.5)
            self.scoreDict[27] = (tScore: 59.8, standardError: 1.5)
            self.scoreDict[28] = (tScore: 60.6, standardError: 1.5)
            self.scoreDict[29] = (tScore: 61.4, standardError: 1.5)
            self.scoreDict[30] = (tScore: 62.2, standardError: 1.5)
            self.scoreDict[31] = (tScore: 63, standardError: 1.5)
            self.scoreDict[32] = (tScore: 63.8, standardError: 1.5)
            self.scoreDict[33] = (tScore: 64.6, standardError: 1.5)
            self.scoreDict[34] = (tScore: 65.4, standardError: 1.5)
            self.scoreDict[35] = (tScore: 66.3, standardError: 1.5)
            self.scoreDict[36] = (tScore: 67.3, standardError: 1.6)
            self.scoreDict[37] = (tScore: 68.3, standardError: 1.7)
            self.scoreDict[38] = (tScore: 69.6, standardError: 1.9)
            self.scoreDict[39] = (tScore: 71.3, standardError: 2.3)
            self.scoreDict[40] = (tScore: 75, standardError: 3.7)
            
        case .Fatigue:
            self.title = "Anxiety - SF"
            self.questions.append(Question(text: "I felt exhausted.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt that I had no energy.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt fatigued.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I was too tired to do my household chores.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I was too tired to leave the house.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I was frustrated by being too tired to do the things I wanted to do.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt tired.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I had to limit my social activity because I was tired.", questionOptions: .NeverAlways))
            self.instructions = "In the past 7 days…"
            self.scoreDict[8] = (tScore: 29.5, standardError: 4.4)
            self.scoreDict[9] = (tScore: 34.1, standardError: 2.7)
            self.scoreDict[10] = (tScore: 36.5, standardError: 2.2)
            self.scoreDict[11] = (tScore: 38.2, standardError: 2)
            self.scoreDict[12] = (tScore: 39.5, standardError: 1.9)
            self.scoreDict[13] = (tScore: 40.7, standardError: 1.8)
            self.scoreDict[14] = (tScore: 41.8, standardError: 1.7)
            self.scoreDict[15] = (tScore: 42.8, standardError: 1.7)
            self.scoreDict[16] = (tScore: 43.8, standardError: 1.7)
            self.scoreDict[17] = (tScore: 44.7, standardError: 1.7)
            self.scoreDict[18] = (tScore: 45.6, standardError: 1.7)
            self.scoreDict[19] = (tScore: 46.5, standardError: 1.7)
            self.scoreDict[20] = (tScore: 47.4, standardError: 1.7)
            self.scoreDict[21] = (tScore: 48.4, standardError: 1.7)
            self.scoreDict[22] = (tScore: 49.3, standardError: 1.7)
            self.scoreDict[23] = (tScore: 50.3, standardError: 1.7)
            self.scoreDict[24] = (tScore: 51.3, standardError: 1.8)
            self.scoreDict[25] = (tScore: 52.3, standardError: 1.7)
            self.scoreDict[26] = (tScore: 53.3, standardError: 1.7)
            self.scoreDict[27] = (tScore: 54.4, standardError: 1.7)
            self.scoreDict[28] = (tScore: 55.4, standardError: 1.7)
            self.scoreDict[29] = (tScore: 56.5, standardError: 1.8)
            self.scoreDict[30] = (tScore: 57.6, standardError: 1.8)
            self.scoreDict[31] = (tScore: 58.8, standardError: 1.8)
            self.scoreDict[32] = (tScore: 59.9, standardError: 1.8)
            self.scoreDict[33] = (tScore: 61.1, standardError: 1.8)
            self.scoreDict[34] = (tScore: 62.3, standardError: 1.8)
            self.scoreDict[35] = (tScore: 63.5, standardError: 1.8)
            self.scoreDict[36] = (tScore: 64.8, standardError: 1.9)
            self.scoreDict[37] = (tScore: 66.2, standardError: 2)
            self.scoreDict[38] = (tScore: 67.9, standardError: 2.2)
            self.scoreDict[39] = (tScore: 70.1, standardError: 2.7)
            self.scoreDict[40] = (tScore: 74.1, standardError: 4)
        case .UpperExtremityFunction:
            self.title = "Upper Extremity Function (Fine Motor, ADL) - SF"
            self.questions.append(Question(text: "Are you able to turn a key in a lock?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to brush your teeth?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to make a phone call using a touch tone key-pad?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to pick up coins from a table top?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to write with a pen or pencil?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to  open and close a zipper?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to wash and dry your body?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to shampoo your hair?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.scoreDict[8] = (tScore: 12.8, standardError: 2)
            self.scoreDict[9] = (tScore: 13.7, standardError: 2.3)
            self.scoreDict[10] = (tScore: 14.7, standardError: 2.4)
            self.scoreDict[11] = (tScore: 15.8, standardError: 2.5)
            self.scoreDict[12] = (tScore: 16.9, standardError: 2.4)
            self.scoreDict[13] = (tScore: 18, standardError: 2.4)
            self.scoreDict[14] = (tScore: 19, standardError: 2.3)
            self.scoreDict[15] = (tScore: 19.9, standardError: 2.2)
            self.scoreDict[16] = (tScore: 20.8, standardError: 2.1)
            self.scoreDict[17] = (tScore: 21.6, standardError: 2.1)
            self.scoreDict[18] = (tScore: 22.4, standardError: 2.1)
            self.scoreDict[19] = (tScore: 23.1, standardError: 2)
            self.scoreDict[20] = (tScore: 23.9, standardError: 2)
            self.scoreDict[21] = (tScore: 24.6, standardError: 2)
            self.scoreDict[22] = (tScore: 25.3, standardError: 2)
            self.scoreDict[23] = (tScore: 26, standardError: 2)
            self.scoreDict[24] = (tScore: 26.7, standardError: 2)
            self.scoreDict[25] = (tScore: 27.3, standardError: 2)
            self.scoreDict[26] = (tScore: 28, standardError: 2)
            self.scoreDict[27] = (tScore: 28.7, standardError: 2)
            self.scoreDict[28] = (tScore: 29.5, standardError: 2)
            self.scoreDict[29] = (tScore: 30.2, standardError: 2.1)
            self.scoreDict[30] = (tScore: 30.9, standardError: 2.1)
            self.scoreDict[31] = (tScore: 31.7, standardError: 2.1)
            self.scoreDict[32] = (tScore: 32.6, standardError: 2.2)
            self.scoreDict[33] = (tScore: 33.5, standardError: 2.3)
            self.scoreDict[34] = (tScore: 34.5, standardError: 2.4)
            self.scoreDict[35] = (tScore: 35.6, standardError: 2.7)
            self.scoreDict[36] = (tScore: 37.1, standardError: 3.2)
            self.scoreDict[37] = (tScore: 39.3, standardError: 4.2)
            self.scoreDict[38] = (tScore: 41.2, standardError: 4.5)
            self.scoreDict[39] = (tScore: 43.7, standardError: 4.7)
            self.scoreDict[40] = (tScore: 53.8, standardError: 7.8)
        case .LowerExtremityFunction:
            self.title = "Lower Extremity Function (Mobility) - SF"
            self.questions.append(Question(text: "Are you able to get on and off the toilet?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to step up and down curbs?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to get in and out of a car?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to get out of bed into a chair?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to push a heavy door?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to run errands and shop?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to get up off the floor from lying on your back without help?", questionOptions: .WithoutAnyDiffUnableToDo))
            self.questions.append(Question(text: "Are you able to go for a walk for 15 minutes?", questionOptions: .WithoutAnyDiffUnableToDo))
            
            self.scoreDict[8] = (tScore: 16.5, standardError: 3)
            self.scoreDict[9] = (tScore: 19.2, standardError: 2.8)
            self.scoreDict[10] = (tScore: 21.1, standardError: 2.6)
            self.scoreDict[11] = (tScore: 22.6, standardError: 2.4)
            self.scoreDict[12] = (tScore: 23.9, standardError: 2.3)
            self.scoreDict[13] = (tScore: 25.1, standardError: 2.3)
            self.scoreDict[14] = (tScore: 26.2, standardError: 2.2)
            self.scoreDict[15] = (tScore: 27.2, standardError: 2.2)
            self.scoreDict[16] = (tScore: 28.1, standardError: 2.1)
            self.scoreDict[17] = (tScore: 29, standardError: 2.1)
            self.scoreDict[18] = (tScore: 29.9, standardError: 2.1)
            self.scoreDict[19] = (tScore: 30.7, standardError: 2.1)
            self.scoreDict[20] = (tScore: 31.5, standardError: 2.1)
            self.scoreDict[21] = (tScore: 32.2, standardError: 2.1)
            self.scoreDict[22] = (tScore: 33, standardError: 2.1)
            self.scoreDict[23] = (tScore: 33.7, standardError: 2)
            self.scoreDict[24] = (tScore: 34.5, standardError: 2.1)
            self.scoreDict[25] = (tScore: 35.2, standardError: 2.1)
            self.scoreDict[26] = (tScore: 36, standardError: 2.1)
            self.scoreDict[27] = (tScore: 36.7, standardError: 2.1)
            self.scoreDict[28] = (tScore: 37.5, standardError: 2.1)
            self.scoreDict[29] = (tScore: 38.3, standardError: 2.1)
            self.scoreDict[30] = (tScore: 39.1, standardError: 2.2)
            self.scoreDict[31] = (tScore: 39.9, standardError: 2.2)
            self.scoreDict[32] = (tScore: 40.8, standardError: 2.3)
            self.scoreDict[33] = (tScore: 41.7, standardError: 2.4)
            self.scoreDict[34] = (tScore: 42.8, standardError: 2.5)
            self.scoreDict[35] = (tScore: 43.9, standardError: 2.6)
            self.scoreDict[36] = (tScore: 45.2, standardError: 2.9)
            self.scoreDict[37] = (tScore: 46.7, standardError: 3.1)
            self.scoreDict[38] = (tScore: 48.6, standardError: 3.3)
            self.scoreDict[39] = (tScore: 51.2, standardError: 3.8)
            self.scoreDict[40] = (tScore: 58.6, standardError: 6.4)
        case .CognitiveFunction:
            self.title = "Cognitive Function - SF"
            self.questions.append(Question(text: "I had to read something several times to understand it.", questionOptions: .NeverVeryOften))
            self.questions.append(Question(text: "My thinking was slow.", questionOptions: .NeverVeryOften))
            self.questions.append(Question(text: "I had to work really hard to pay attention or I would make a mistake.", questionOptions: .NeverVeryOften))
            self.questions.append(Question(text: "I had trouble concentrating.", questionOptions: .NeverVeryOften))
            self.questions.append(Question(text: "reading and following complex instructions (e.g., directions for a new medication)?", questionOptions: .NoneCannotDo))
            self.questions.append(Question(text: "planning for and keeping appointments that are not part of your weekly routine (e.g., a therapy or doctor appointment, or a social gathering with friends and family)?", questionOptions: .NoneCannotDo))
            self.questions.append(Question(text: "managing your time to do most of your daily activities?", questionOptions: .NoneCannotDo))
            self.questions.append(Question(text: "learning new tasks or instructions?", questionOptions: .NoneCannotDo))
            
            self.instructions = "In the past 7 days…"
            self.secondInstructions = "How much DIFFICULTY do you currently have…"
            
            self.scoreDict[8] = (tScore: 17.3, standardError: 4.3)
            self.scoreDict[9] = (tScore: 20.4, standardError: 3.8)
            self.scoreDict[10] = (tScore: 22.6, standardError: 3.5)
            self.scoreDict[11] = (tScore: 24.4, standardError: 3.3)
            self.scoreDict[12] = (tScore: 25.9, standardError: 3.1)
            self.scoreDict[13] = (tScore: 27.3, standardError: 3)
            self.scoreDict[14] = (tScore: 28.6, standardError: 2.9)
            self.scoreDict[15] = (tScore: 29.8, standardError: 2.8)
            self.scoreDict[16] = (tScore: 30.9, standardError: 2.7)
            self.scoreDict[17] = (tScore: 32, standardError: 2.7)
            self.scoreDict[18] = (tScore: 33, standardError: 2.6)
            self.scoreDict[19] = (tScore: 34, standardError: 2.6)
            self.scoreDict[20] = (tScore: 35, standardError: 2.6)
            self.scoreDict[21] = (tScore: 36, standardError: 2.6)
            self.scoreDict[22] = (tScore: 37, standardError: 2.6)
            self.scoreDict[23] = (tScore: 37.9, standardError: 2.6)
            self.scoreDict[24] = (tScore: 38.9, standardError: 2.6)
            self.scoreDict[25] = (tScore: 39.9, standardError: 2.6)
            self.scoreDict[26] = (tScore: 40.9, standardError: 2.6)
            self.scoreDict[27] = (tScore: 41.9, standardError: 2.6)
            self.scoreDict[28] = (tScore: 42.9, standardError: 2.6)
            self.scoreDict[29] = (tScore: 43.9, standardError: 2.7)
            self.scoreDict[30] = (tScore: 44.9, standardError: 2.7)
            self.scoreDict[31] = (tScore: 46, standardError: 2.7)
            self.scoreDict[32] = (tScore: 47.1, standardError: 2.7)
            self.scoreDict[33] = (tScore: 48.3, standardError: 2.8)
            self.scoreDict[34] = (tScore: 49.6, standardError: 2.8)
            self.scoreDict[35] = (tScore: 50.9, standardError: 2.9)
            self.scoreDict[36] = (tScore: 52.4, standardError: 3.1)
            self.scoreDict[37] = (tScore: 54.2, standardError: 3.3)
            self.scoreDict[38] = (tScore: 56.3, standardError: 3.7)
            self.scoreDict[39] = (tScore: 59, standardError: 4.2)
            self.scoreDict[40] = (tScore: 64.2, standardError: 5.7)
        case .EmotionBehavioralDyscontrol:
            self.title = "Emotional and Behavioral Dyscontrol - SF"
            self.questions.append(Question(text: "I had trouble controlling my temper.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "It was hard to control my behavior.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I said or did things without thinking.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I got impatient with other people.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I was irritable around other people.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I was bothered by little things.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I became easily upset.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I was in conflict with others.", questionOptions: .NeverAlways))
            
            self.scoreDict[8] = (tScore: 32.2, standardError: 4.9)
            self.scoreDict[9] = (tScore: 37.2, standardError: 3.5)
            self.scoreDict[10] = (tScore: 39.9, standardError: 3)
            self.scoreDict[11] = (tScore: 42, standardError: 2.7)
            self.scoreDict[12] = (tScore: 43.7, standardError: 2.6)
            self.scoreDict[13] = (tScore: 45.3, standardError: 2.5)
            self.scoreDict[14] = (tScore: 46.7, standardError: 2.4)
            self.scoreDict[15] = (tScore: 48.1, standardError: 2.4)
            self.scoreDict[16] = (tScore: 49.4, standardError: 2.4)
            self.scoreDict[17] = (tScore: 50.7, standardError: 2.4)
            self.scoreDict[18] = (tScore: 52, standardError: 2.4)
            self.scoreDict[19] = (tScore: 53.2, standardError: 2.4)
            self.scoreDict[20] = (tScore: 54.5, standardError: 2.4)
            self.scoreDict[21] = (tScore: 55.8, standardError: 2.4)
            self.scoreDict[22] = (tScore: 57, standardError: 2.4)
            self.scoreDict[23] = (tScore: 58.3, standardError: 2.4)
            self.scoreDict[24] = (tScore: 59.6, standardError: 2.4)
            self.scoreDict[25] = (tScore: 60.8, standardError: 2.4)
            self.scoreDict[26] = (tScore: 62.1, standardError: 2.4)
            self.scoreDict[27] = (tScore: 63.3, standardError: 2.4)
            self.scoreDict[28] = (tScore: 64.5, standardError: 2.4)
            self.scoreDict[29] = (tScore: 65.8, standardError: 2.4)
            self.scoreDict[30] = (tScore: 66.9, standardError: 2.3)
            self.scoreDict[31] = (tScore: 68.1, standardError: 2.3)
            self.scoreDict[32] = (tScore: 69.3, standardError: 2.3)
            self.scoreDict[33] = (tScore: 70.6, standardError: 2.4)
            self.scoreDict[34] = (tScore: 71.8, standardError: 2.4)
            self.scoreDict[35] = (tScore: 73.1, standardError: 2.4)
            self.scoreDict[36] = (tScore: 74.5, standardError: 2.5)
            self.scoreDict[37] = (tScore: 76, standardError: 2.7)
            self.scoreDict[38] = (tScore: 77.7, standardError: 2.8)
            self.scoreDict[39] = (tScore: 79.8, standardError: 3.1)
            self.scoreDict[40] = (tScore: 82.6, standardError: 3.3)
        case .PositiveAffectAndWellBeing:
            self.title = "Positive Affect and Well-Being - SF"
            self.questions.append(Question(text: "I had a sense of well-being.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt hopeful.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "My life was satisfying.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "My life had purpose.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "My life had meaning.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt cheerful.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "My life was worth living.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I had a sense of balance in my life.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "Many areas of my life were interesting to me.", questionOptions: .NeverAlways))
            
            self.instructions = "Lately…"
            
            self.scoreDict[9] = (tScore: 26.3, standardError: 3.9)
            self.scoreDict[10] = (tScore: 30.2, standardError: 2.3)
            self.scoreDict[11] = (tScore: 32, standardError: 1.8)
            self.scoreDict[12] = (tScore: 33.3, standardError: 1.6)
            self.scoreDict[13] = (tScore: 34.3, standardError: 1.5)
            self.scoreDict[14] = (tScore: 35.3, standardError: 1.4)
            self.scoreDict[15] = (tScore: 36.1, standardError: 1.4)
            self.scoreDict[16] = (tScore: 37, standardError: 1.4)
            self.scoreDict[17] = (tScore: 37.8, standardError: 1.4)
            self.scoreDict[18] = (tScore: 38.6, standardError: 1.4)
            self.scoreDict[19] = (tScore: 39.4, standardError: 1.4)
            self.scoreDict[20] = (tScore: 40.2, standardError: 1.4)
            self.scoreDict[21] = (tScore: 41, standardError: 1.4)
            self.scoreDict[22] = (tScore: 41.8, standardError: 1.4)
            self.scoreDict[23] = (tScore: 42.7, standardError: 1.4)
            self.scoreDict[24] = (tScore: 43.5, standardError: 1.4)
            self.scoreDict[25] = (tScore: 44.4, standardError: 1.5)
            self.scoreDict[26] = (tScore: 45.3, standardError: 1.5)
            self.scoreDict[27] = (tScore: 46.3, standardError: 1.5)
            self.scoreDict[28] = (tScore: 47.2, standardError: 1.5)
            self.scoreDict[29] = (tScore: 48.1, standardError: 1.5)
            self.scoreDict[30] = (tScore: 49, standardError: 1.4)
            self.scoreDict[31] = (tScore: 49.9, standardError: 1.4)
            self.scoreDict[32] = (tScore: 50.7, standardError: 1.4)
            self.scoreDict[33] = (tScore: 51.5, standardError: 1.4)
            self.scoreDict[34] = (tScore: 52.3, standardError: 1.4)
            self.scoreDict[35] = (tScore: 53.2, standardError: 1.4)
            self.scoreDict[36] = (tScore: 54, standardError: 1.4)
            self.scoreDict[37] = (tScore: 54.9, standardError: 1.4)
            self.scoreDict[38] = (tScore: 55.8, standardError: 1.5)
            self.scoreDict[39] = (tScore: 56.8, standardError: 1.5)
            self.scoreDict[40] = (tScore: 57.8, standardError: 1.5)
            self.scoreDict[41] = (tScore: 58.8, standardError: 1.5)
            self.scoreDict[42] = (tScore: 59.9, standardError: 1.6)
            self.scoreDict[43] = (tScore: 61.3, standardError: 1.9)
            self.scoreDict[44] = (tScore: 63.3, standardError: 2.4)
            self.scoreDict[45] = (tScore: 68, standardError: 4.5)
        case .SleepDisturbance:
            self.title = "Sleep Disturbance - SF"
            self.questions.append(Question(text: "I had to force myself to get up in the morning.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I had trouble stopping my thoughts at bedtime.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I was sleepy during the daytime.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I had trouble sleeping because of bad dreams.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I had trouble falling asleep.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "Pain woke me up.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I avoided or cancelled activities with my friends because I was tired from having a bad night's sleep.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt physically tense during the middle of the night or early morning hours.", questionOptions: .NeverAlways))
            
            self.instructions = "In the past 7 days…"
            
            self.scoreDict[8] = (tScore: 32, standardError: 5.9)
            self.scoreDict[9] = (tScore: 36.3, standardError: 5)
            self.scoreDict[10] = (tScore: 39.1, standardError: 4.7)
            self.scoreDict[11] = (tScore: 41.7, standardError: 4.4)
            self.scoreDict[12] = (tScore: 43.8, standardError: 4.2)
            self.scoreDict[13] = (tScore: 45.6, standardError: 4)
            self.scoreDict[14] = (tScore: 47.3, standardError: 3.9)
            self.scoreDict[15] = (tScore: 48.9, standardError: 3.8)
            self.scoreDict[16] = (tScore: 50.4, standardError: 3.7)
            self.scoreDict[17] = (tScore: 51.8, standardError: 3.6)
            self.scoreDict[18] = (tScore: 53.1, standardError: 3.6)
            self.scoreDict[19] = (tScore: 54.4, standardError: 3.5)
            self.scoreDict[20] = (tScore: 55.6, standardError: 3.5)
            self.scoreDict[21] = (tScore: 56.8, standardError: 3.5)
            self.scoreDict[22] = (tScore: 58, standardError: 3.4)
            self.scoreDict[23] = (tScore: 59.2, standardError: 3.4)
            self.scoreDict[24] = (tScore: 60.4, standardError: 3.4)
            self.scoreDict[25] = (tScore: 61.6, standardError: 3.4)
            self.scoreDict[26] = (tScore: 62.8, standardError: 3.4)
            self.scoreDict[27] = (tScore: 63.9, standardError: 3.4)
            self.scoreDict[28] = (tScore: 65.1, standardError: 3.4)
            self.scoreDict[29] = (tScore: 66.4, standardError: 3.4)
            self.scoreDict[30] = (tScore: 67.6, standardError: 3.5)
            self.scoreDict[31] = (tScore: 68.9, standardError: 3.5)
            self.scoreDict[32] = (tScore: 5.9, standardError: 25)
            self.scoreDict[33] = (tScore: 71.7, standardError: 3.6)
            self.scoreDict[34] = (tScore: 73.2, standardError: 3.6)
            self.scoreDict[35] = (tScore: 74.7, standardError: 3.7)
            self.scoreDict[36] = (tScore: 76.4, standardError: 3.8)
            self.scoreDict[37] = (tScore: 78.2, standardError: 3.9)
            self.scoreDict[38] = (tScore: 80.2, standardError: 3.9)
            self.scoreDict[39] = (tScore: 82.2, standardError: 3.8)
            self.scoreDict[40] = (tScore: 84.2, standardError: 3.5)
        case .SocialParticipation:
            self.title = "Ability to Participate in Social Roles and Activities - SF"
            self.questions.append(Question(text: "I can keep up with my family responsibilities.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I am able to do all of my regular family activities.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I am able to socialize with my friends.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I am able to do all of my regular activities with friends.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I can keep up with my social commitments.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I am able to participate in leisure activities.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I am able to perform my daily routines.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I can keep up with my work responsabilities (include work at home).", questionOptions: .NeverAlways))
            
            self.scoreDict[8] = (tScore: 24.1, standardError: 3.8)
            self.scoreDict[9] = (tScore: 27.7, standardError: 2.5)
            self.scoreDict[10] = (tScore: 29.5, standardError: 2.1)
            self.scoreDict[11] = (tScore: 30.8, standardError: 1.8)
            self.scoreDict[12] = (tScore: 31.8, standardError: 1.6)
            self.scoreDict[13] = (tScore: 32.7, standardError: 1.5)
            self.scoreDict[14] = (tScore: 33.5, standardError: 1.5)
            self.scoreDict[15] = (tScore: 34.3, standardError: 1.4)
            self.scoreDict[16] = (tScore: 35, standardError: 1.4)
            self.scoreDict[17] = (tScore: 35.7, standardError: 1.4)
            self.scoreDict[18] = (tScore: 36.4, standardError: 1.4)
            self.scoreDict[19] = (tScore: 37.1, standardError: 1.4)
            self.scoreDict[20] = (tScore: 37.8, standardError: 1.4)
            self.scoreDict[21] = (tScore: 38.5, standardError: 1.4)
            self.scoreDict[22] = (tScore: 39.2, standardError: 1.4)
            self.scoreDict[23] = (tScore: 39.9, standardError: 1.4)
            self.scoreDict[24] = (tScore: 40.6, standardError: 1.4)
            self.scoreDict[25] = (tScore: 41.3, standardError: 1.4)
            self.scoreDict[26] = (tScore: 42, standardError: 1.4)
            self.scoreDict[27] = (tScore: 42.7, standardError: 1.4)
            self.scoreDict[28] = (tScore: 43.4, standardError: 1.4)
            self.scoreDict[29] = (tScore: 44, standardError: 1.4)
            self.scoreDict[30] = (tScore: 44.7, standardError: 1.4)
            self.scoreDict[31] = (tScore: 45.4, standardError: 1.4)
            self.scoreDict[32] = (tScore: 46.1, standardError: 1.4)
            self.scoreDict[33] = (tScore: 46.8, standardError: 1.4)
            self.scoreDict[34] = (tScore: 47.5, standardError: 1.5)
            self.scoreDict[35] = (tScore: 48.3, standardError: 1.5)
            self.scoreDict[36] = (tScore: 49.2, standardError: 1.6)
            self.scoreDict[37] = (tScore: 50.2, standardError: 1.8)
            self.scoreDict[38] = (tScore: 51.6, standardError: 2.2)
            self.scoreDict[39] = (tScore: 53.4, standardError: 2.6)
            self.scoreDict[40] = (tScore: 60.2, standardError: 5.8)
            
        case .SatisfactionWithSocialRolesAndActivities:
            self.title = "Satisfaction with Social Roles and Activities - SF"
            self.questions.append(Question(text: "I am bothered by my limitations in regular family activities.", questionOptions: .NotAtAllVeryMuch))
            self.questions.append(Question(text: "I am disappointed in my ability to socialize with my family.", questionOptions: .NotAtAllVeryMuch))
            self.questions.append(Question(text: "I am bothered by limitations in my regular activities with friends.", questionOptions: .NotAtAllVeryMuch))
            self.questions.append(Question(text: "I am disappointed in my ability to meet the needs of my friends.", questionOptions: .NotAtAllVeryMuch))
            self.questions.append(Question(text: "I am satisfied with my ability to do things for fun outside my house.", questionOptions: .NotAtAllVeryMuchReversed))
            self.questions.append(Question(text: "I am satisfied with the amount of time I spend doing leisure activities.", questionOptions: .NotAtAllVeryMuchReversed))
            self.questions.append(Question(text: "I am satisfied with how much of my work I can do (include work at home).", questionOptions: .NotAtAllVeryMuchReversed))
            self.questions.append(Question(text: "I am satisfied with my ability to do household chores or tasks.", questionOptions: .NotAtAllVeryMuchReversed))
            
            self.instructions = "In the past 7 days…"
            
            self.scoreDict[8] = (tScore: 28.4, standardError: 4.1)
            self.scoreDict[9] = (tScore: 32.6, standardError: 2.3)
            self.scoreDict[10] = (tScore: 34, standardError: 2)
            self.scoreDict[11] = (tScore: 35.1, standardError: 1.8)
            self.scoreDict[12] = (tScore: 35.9, standardError: 1.7)
            self.scoreDict[13] = (tScore: 36.7, standardError: 1.5)
            self.scoreDict[14] = (tScore: 37.4, standardError: 1.5)
            self.scoreDict[15] = (tScore: 38, standardError: 1.4)
            self.scoreDict[16] = (tScore: 38.6, standardError: 1.4)
            self.scoreDict[17] = (tScore: 39.1, standardError: 1.4)
            self.scoreDict[18] = (tScore: 39.7, standardError: 1.3)
            self.scoreDict[19] = (tScore: 40.2, standardError: 1.3)
            self.scoreDict[20] = (tScore: 40.7, standardError: 1.3)
            self.scoreDict[21] = (tScore: 41.2, standardError: 1.3)
            self.scoreDict[22] = (tScore: 41.7, standardError: 1.3)
            self.scoreDict[23] = (tScore: 42.2, standardError: 1.3)
            self.scoreDict[24] = (tScore: 42.7, standardError: 1.3)
            self.scoreDict[25] = (tScore: 43.2, standardError: 1.3)
            self.scoreDict[26] = (tScore: 43.7, standardError: 1.3)
            self.scoreDict[27] = (tScore: 44.2, standardError: 1.3)
            self.scoreDict[28] = (tScore: 44.7, standardError: 1.3)
            self.scoreDict[29] = (tScore: 45.2, standardError: 1.3)
            self.scoreDict[30] = (tScore: 45.8, standardError: 1.4)
            self.scoreDict[31] = (tScore: 46.3, standardError: 1.4)
            self.scoreDict[32] = (tScore: 46.9, standardError: 1.4)
            self.scoreDict[33] = (tScore: 47.5, standardError: 1.4)
            self.scoreDict[34] = (tScore: 48.2, standardError: 1.5)
            self.scoreDict[35] = (tScore: 48.9, standardError: 1.5)
            self.scoreDict[36] = (tScore: 49.8, standardError: 1.6)
            self.scoreDict[37] = (tScore: 50.7, standardError: 1.8)
            self.scoreDict[38] = (tScore: 52, standardError: 2.1)
            self.scoreDict[39] = (tScore: 53.7, standardError: 2.5)
            self.scoreDict[40] = (tScore: 60.5, standardError: 5.7)
        case .Stigma:
            self.title = "Stigma - SF"
            self.questions.append(Question(text: "Because of my illness, some people avoided me.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "Because of my illness, I felt left out of things.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "Because of my illness, people avoided looking at me.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt embarrassed about my illness.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "Because of my illness, some people seemed uncomfortable with me.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "I felt embarrassed because of my physical limitations.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "Because of my illness, people were unkind to me.", questionOptions: .NeverAlways))
            self.questions.append(Question(text: "Some people acted as though it was my fault I have this illness.", questionOptions: .NeverAlways))
            
            self.instructions = "Lately…"
            
            self.questions.append(Question(text: "blahBlah", questionOptions: .NeverAlways))
            self.scoreDict[8] = (tScore: 39.2, standardError: 5.8)
            self.scoreDict[9] = (tScore: 45.7, standardError: 3.3)
            self.scoreDict[10] = (tScore: 47.6, standardError: 3)
            self.scoreDict[11] = (tScore: 49.3, standardError: 2.6)
            self.scoreDict[12] = (tScore: 50.6, standardError: 2.4)
            self.scoreDict[13] = (tScore: 51.7, standardError: 2.2)
            self.scoreDict[14] = (tScore: 52.8, standardError: 2.1)
            self.scoreDict[15] = (tScore: 53.7, standardError: 2)
            self.scoreDict[16] = (tScore: 54.6, standardError: 2)
            self.scoreDict[17] = (tScore: 55.4, standardError: 2)
            self.scoreDict[18] = (tScore: 56.2, standardError: 1.9)
            self.scoreDict[19] = (tScore: 57, standardError: 1.9)
            self.scoreDict[20] = (tScore: 57.8, standardError: 1.9)
            self.scoreDict[21] = (tScore: 58.5, standardError: 1.9)
            self.scoreDict[22] = (tScore: 59.3, standardError: 1.9)
            self.scoreDict[23] = (tScore: 60.1, standardError: 1.9)
            self.scoreDict[24] = (tScore: 60.8, standardError: 1.9)
            self.scoreDict[25] = (tScore: 61.6, standardError: 1.9)
            self.scoreDict[26] = (tScore: 62.4, standardError: 1.9)
            self.scoreDict[27] = (tScore: 63.2, standardError: 1.9)
            self.scoreDict[28] = (tScore: 64, standardError: 1.9)
            self.scoreDict[29] = (tScore: 64.8, standardError: 1.9)
            self.scoreDict[30] = (tScore: 65.7, standardError: 2)
            self.scoreDict[31] = (tScore: 66.6, standardError: 2)
            self.scoreDict[32] = (tScore: 67.5, standardError: 2)
            self.scoreDict[33] = (tScore: 68.5, standardError: 2.1)
            self.scoreDict[34] = (tScore: 69.6, standardError: 2.1)
            self.scoreDict[35] = (tScore: 70.8, standardError: 2.2)
            self.scoreDict[36] = (tScore: 72.2, standardError: 2.3)
            self.scoreDict[37] = (tScore: 73.7, standardError: 2.4)
            self.scoreDict[38] = (tScore: 75.6, standardError: 2.6)
            self.scoreDict[39] = (tScore: 78.1, standardError: 3)
            self.scoreDict[40] = (tScore: 81.5, standardError: 3.5)
        default:
            print("default")
        }
    }
}
